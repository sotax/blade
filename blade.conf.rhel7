cc_config(
    #extra_incs='thirdparty',
    warnings = [
        '-Wall',
        '-Wextra',
        # disable some warnings enabled by Wextra
        '-Wno-unused-but-set-variable',
        '-Wno-unused-parameter',
        '-Wno-unused-local-typedefs',
        '-Wno-missing-field-initializers',
        # other useful warnings
        '-Wendif-labels',
        '-Wfloat-equal',
        '-Wformat=2',
        '-Wframe-larger-than=69632', # A 64k buffer and other small vars
        '-Wmissing-include-dirs',
        '-Wpointer-arith',
        '-Wwrite-strings',
        # error flags
        '-Werror=char-subscripts',
        '-Werror=comments',
        '-Werror=conversion-null',
        '-Werror=empty-body',
        '-Werror=endif-labels',
        '-Werror=format',
        #'-Werror=format-nonliteral',
        '-Werror=missing-include-dirs',
        '-Werror=overflow',
        #'-Werror=parentheses',
        '-Werror=reorder',
        '-Werror=return-type',
        '-Werror=sequence-point',
        '-Werror=sign-compare',
        #'-Werror=switch',
        '-Werror=type-limits',
        '-Werror=uninitialized',
        # Masked it at first
        # '-Werror=unused-function',
        '-Werror=unused-label',
        '-Werror=unused-result',
        '-Werror=unused-value',
        #'-Werror=unused-variable',
        '-Werror=write-strings',
    ],
    # C++ only warning flags
    cxx_warnings = [
        '-Wno-invalid-offsetof',
        '-Wnon-virtual-dtor',
        '-Woverloaded-virtual',
        '-Wvla',
        '-Werror=non-virtual-dtor',
        '-Werror=overloaded-virtual',
        '-Werror=vla',
    ],
    # C only warning flags
    c_warnings = ['-Werror-implicit-function-declaration'],
    cpplint = 'cpplint.py', # Default is unpathed cpplint.py command
    optimize = ['-O2'],
    benchmark_libs=['//toft/base:benchmark'],
    benchmark_main_libs=['//toft/base:benchmark_main'],
)

"""
# You can append to list options now
cc_config(
    append = config_items(
        extra_incs = ['abc'], # Append abc to existed extra_incs
        warnings = ['-Wxxxx'] # Add -Wxxxx to existed warnings
        ...
    )
)
"""

cc_test_config(
    dynamic_link=False,
    heap_check='',
    gperftools_libs=['external/perftools/perftools_2.4.8_el7_4.9.2:tcmalloc'],
    gperftools_debug_libs=['external/perftools/perftools_2.4.8_el7_4.9.2:tcmalloc_debug'],
    gtest_libs=['external/gtest/gtest_1.7.0_el7_4.9.2:gtest'],
    gtest_main_libs=['external/gtest/gtest_1.7.0_el7_4.9.2:gtest_main']
)

distcc_config(
    enabled=False
)

link_config(
    link_on_tmp=False,
    enable_dccc=False
)

proto_library_config(
    protoc='export LD_LIBRARY_PATH=external/protobuf/protobuf_2.4.1_el7_4.9.2/lib64:${LD_LIBRARY_PATH};external/protobuf/protobuf_2.4.1_el7_4.9.2/bin/protoc',
    protobuf_libs=['//external/protobuf/protobuf_2.4.1_el7_4.9.2:protobuf'],
    protobuf_path='external/protobuf/protobuf_2.4.1_el7_4.9.2/include',
    protobuf_incs = 'external/protobuf/protobuf_2.4.1_el7_4.9.2/include',
    #protobuf_php_path='external/Protobuf-PHP/library',
    #protoc_php_plugin='external/Protobuf-PHP/protoc-gen-php.php'
)

thrift_library_config(
    # The path to thrift compiler.
    thrift='/usr/local/bin/thrift',
    # The libraries depended by thrift.
    thrift_libs=['#thrift', '#pthread'],
    # The extra include paths to be passed to thrift compiler.
    thrift_incs=[],
)

fbthrift_library_config(
    # The path to thrift compilers.
    fbthrift1='fbthrift/compiler/thrift1',
    fbthrift2='fbthrift/compiler/thrift2',
    # The libraries depended by thrift.
    fbthrift_libs=[
      '//fbthrift/thrift/lib/cpp:cpp',
      '//fbthrift/thrift/lib/cpp2:cpp2',
    ],
    # The extra include paths to be passed to thrift compiler.
    fbthrift_incs=[],
)

"""
java_config(
    source_version='1.6',
    target_version='1.6'
)
"""
